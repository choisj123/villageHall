/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-03-28 04:53:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signUp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1679963547934L));
    _jspx_dependants.put("jar:file:/C:/workspace/villageHall/VillageHall/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("    <title>마을회관</title>\r\n");
      out.write("\r\n");
      out.write("    <link\r\n");
      out.write("      rel=\"stylesheet\"\r\n");
      out.write("      href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/sign-up-page.css\"\r\n");
      out.write("      >\r\n");
      out.write("\r\n");
      out.write("    <!-- fontawesome -->\r\n");
      out.write("    <script\r\n");
      out.write("      src=\"https://kit.fontawesome.com/2f1bf0eac7.js\"\r\n");
      out.write("      crossorigin=\"anonymous\"\r\n");
      out.write("    ></script>\r\n");
      out.write("  </head>\r\n");
      out.write("  \r\n");
      out.write("  <body>\r\n");
      out.write("  \r\n");
      out.write("       <main>\r\n");
      out.write("        <!-- hedaer include -->\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("         <!-- 회원가입  -->\r\n");
      out.write("         <section class=\"signUp-content\">\r\n");
      out.write(" \r\n");
      out.write("            <!-- 회원가입 화면 전환 주소(GET)와 같은 주소로 \r\n");
      out.write("                실제 회원가입을 요청(POST)\r\n");
      out.write("                -> 요청 주소가 같아도 데이터 전달 방식이 다르면 중복 허용\r\n");
      out.write("            -->\r\n");
      out.write("\r\n");
      out.write("            <!-- \r\n");
      out.write("                절대경로 : /community/member/signUp\r\n");
      out.write("                상대경로 : signUp\r\n");
      out.write("             -->\r\n");
      out.write("\r\n");
      out.write("            <form action=\"signUp\" method=\"POST\" name=\"signUp-form\" onsubmit=\"return signUpValidate()\">\r\n");
      out.write(" \r\n");
      out.write("                 <label for=\"userEmail\">\r\n");
      out.write("                     <span class=\"required\">*</span> 아이디(이메일)\r\n");
      out.write("                 </label>\r\n");
      out.write("                 \r\n");
      out.write("                 <div class=\"signUp-input-area\">\r\n");
      out.write("                     <input type=\"text\" id=\"userEmail\" name=\"inputEmail\"\r\n");
      out.write("                             placeholder=\"아이디(이메일)\" maxlength=\"30\"\r\n");
      out.write("                             autocomplete=\"off\" required>\r\n");
      out.write(" \r\n");
      out.write("                     <!-- autocomplete=\"off\" : 자동완성 미사용 -->\r\n");
      out.write("                     <!-- required : 필수 작성 input 태그 -->\r\n");
      out.write("                     \r\n");
      out.write("                     <!-- 자바스크립로 코드 추가 예정 -->\r\n");
      out.write("                     <button type=\"button\" id=\"sendBtn\">인증번호 받기</button>\r\n");
      out.write("                 </div>\r\n");
      out.write(" \r\n");
      out.write("                 <span class=\"signUp-message\" id=\"emailMessage\">메일을 받을 수 있는 이메일을 입력해주세요.</span>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("                 <label for=\"emailCheck\">\r\n");
      out.write("                     <span class=\"required\">*</span> 인증번호\r\n");
      out.write("                 </label>\r\n");
      out.write("                 \r\n");
      out.write("                 <div class=\"signUp-input-area\">\r\n");
      out.write("                     <!-- cNumber -->\r\n");
      out.write("                     <input type=\"text\" id=\"cNumber\"  \r\n");
      out.write("                             placeholder=\"인증번호 입력\" maxlength=\"6\"\r\n");
      out.write("                             autocomplete=\"off\">\r\n");
      out.write(" \r\n");
      out.write("                     <button type=\"button\" id=\"cBtn\">인증하기</button>\r\n");
      out.write("                 </div>\r\n");
      out.write(" \r\n");
      out.write("                 <!-- 5:00 타이머 / 인증되었습니다(녹색) / 인증 시간이 만료되었습니다.(빨간색) -->\r\n");
      out.write("                 <span class=\"signUp-message\" id=\"cMessage\" ></span>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("                 <label for=\"userPw\">\r\n");
      out.write("                     <span class=\"required\">*</span> 비밀번호\r\n");
      out.write("                 </label>\r\n");
      out.write("                 \r\n");
      out.write("                 <div class=\"signUp-input-area\">\r\n");
      out.write("                     <input type=\"text\" id=\"userPw\" name=\"inputPw\"\r\n");
      out.write("                             placeholder=\"비밀번호\" maxlength=\"30\">\r\n");
      out.write("                 </div>\r\n");
      out.write(" \r\n");
      out.write("                 <div class=\"signUp-input-area\">\r\n");
      out.write("                     <input type=\"text\" id=\"userPwConfirm\"\r\n");
      out.write("                             placeholder=\"비밀번호 확인\" maxlength=\"30\">\r\n");
      out.write("                 </div>\r\n");
      out.write(" \r\n");
      out.write("                 <span class=\"signUp-message\" id=\"pwMessage\">영어, 숫자, 특수문자(!,@,#,-,_) 6~30글자 사이로 작성해주세요.</span>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("                 <label for=\"userNickname\">\r\n");
      out.write("                     <span class=\"required\">*</span> 닉네임\r\n");
      out.write("                 </label>\r\n");
      out.write("                 \r\n");
      out.write("                 <div class=\"signUp-input-area\">\r\n");
      out.write("                     <input type=\"text\" id=\"userNickname\" name=\"inputNickname\"\r\n");
      out.write("                             placeholder=\"닉네임\" maxlength=\"10\">\r\n");
      out.write("                 </div>\r\n");
      out.write(" \r\n");
      out.write("                 <span class=\"signUp-message\" id=\"nicknameMessage\">영어/숫자/한글 2~10글자 사이로 작성해주세요.</span>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("                 <label for=\"userTel\">\r\n");
      out.write("                     <span class=\"required\">*</span> 전화번호\r\n");
      out.write("                 </label>\r\n");
      out.write("                 \r\n");
      out.write("                 <div class=\"signUp-input-area\">\r\n");
      out.write("                     <input type=\"text\" id=\"userTel\" name=\"inputTel\"\r\n");
      out.write("                             placeholder=\"(- 없이 숫자만 입력)\" maxlength=\"11\">\r\n");
      out.write("                 </div>\r\n");
      out.write(" \r\n");
      out.write("                 <span class=\"signUp-message\" id=\"telMessage\">전화번호를 입력해주세요.(- 제외)</span>\r\n");
      out.write("                 \r\n");
      out.write("                 <label for=\"profile\">\r\n");
      out.write("               		<span class=\"required\">*</span> 프로필 사진\r\n");
      out.write("                 </label>\r\n");
      out.write("                 \r\n");
      out.write("				<div class=\"signUp-profile-area\">\r\n");
      out.write("				\r\n");
      out.write("                 	<input type=\"file\" id=\"userPic\">\r\n");
      out.write("                 	\r\n");
      out.write("                 </div>\r\n");
      out.write("                \r\n");
      out.write("              \r\n");
      out.write("              \r\n");
      out.write(" \r\n");
      out.write("                 <button type=\"submit\" id=\"signUp-btn\">가입하기</button>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("             </form>\r\n");
      out.write("             \r\n");
      out.write("         </section>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("     </main>\r\n");
      out.write(" \r\n");
      out.write("    <!-- footer include -->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- jQuery 라이브러리 추가(CDN) -->\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\" integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- signUp.js 연결 -->\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/member/signUp.js\"></script>\r\n");
      out.write("  \r\n");
      out.write("  </body>\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
