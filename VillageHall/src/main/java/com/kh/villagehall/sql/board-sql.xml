<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<comment>board-sql.xml</comment>
	
	<!-- 내 게시글 조회 -->
	<entry key="selectMyBoard">
		SELECT B.BOARD_NO, B.BOARD_TITLE, TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS BOARD_CREATE_DATE, B.READ_COUNT, COUNT(L.BOARD_NO) AS LIKE_COUNT, CATEGORY_NAME
		FROM BOARD B
		JOIN "USER" U ON B.USER_NO = U.USER_NO
		LEFT JOIN "LIKE" L ON B.BOARD_NO = L.BOARD_NO
		JOIN CATEGORY USING(CATEGORY_NO)
		WHERE U.USER_NO = ?
		AND BOARD_DELETE_FG = 'N'
		GROUP BY B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CREATE_DATE, B.READ_COUNT, CATEGORY_NAME
		ORDER BY B.BOARD_NO DESC
	</entry>
	
	<!-- 내 좋아요 조회 -->
	<entry key="selectMyLike">
		SELECT B.BOARD_NO, B.BOARD_TITLE, TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS BOARD_CREATE_DATE, U.USER_NICKNAME, B.READ_COUNT, COUNT(*) AS LIKE_COUNT, CATEGORY_NAME
		FROM BOARD B
		JOIN "USER" U ON B.USER_NO = U.USER_NO
		LEFT JOIN "LIKE" L ON B.BOARD_NO = L.BOARD_NO
		JOIN CATEGORY USING(CATEGORY_NO)
		WHERE B.BOARD_DELETE_FG = 'N' AND B.BOARD_NO IN (SELECT BOARD_NO FROM "LIKE" WHERE USER_NO = ? )
		GROUP BY B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CREATE_DATE, U.USER_NICKNAME, B.READ_COUNT, CATEGORY_NAME
		ORDER BY B.BOARD_NO DESC
	</entry>
	
	
	<!-- 전체 게시글 조회 -->
	<entry key="selectAllBoard">
		SELECT B.BOARD_NO, B.BOARD_TITLE, TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS BOARD_CREATE_DATE, USER_NICKNAME ,B.READ_COUNT, COUNT(L.BOARD_NO) AS LIKE_COUNT, CATEGORY_NAME
		FROM BOARD B
		JOIN "USER" U ON B.USER_NO = U.USER_NO
		LEFT JOIN "LIKE" L ON B.BOARD_NO = L.BOARD_NO
		JOIN CATEGORY USING(CATEGORY_NO)
		WHERE BOARD_DELETE_FG = 'N'
		GROUP BY B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CREATE_DATE, USER_NICKNAME, B.READ_COUNT, CATEGORY_NAME
		ORDER BY B.BOARD_NO DESC
	</entry>
	
	<!-- 인기 게시글 조회수 순 정렬 -->
	<entry key="sortByReadCount">
		SELECT ROWNUM, A.*
		FROM (SELECT B.BOARD_NO, B.BOARD_TITLE, TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS BOARD_CREATE_DATE, USER_NICKNAME ,B.READ_COUNT, COUNT(L.BOARD_NO) AS LIKE_COUNT, CATEGORY_NAME
		FROM BOARD B
		JOIN "USER" U ON B.USER_NO = U.USER_NO
		LEFT JOIN "LIKE" L ON B.BOARD_NO = L.BOARD_NO
		JOIN CATEGORY USING(CATEGORY_NO)
		WHERE BOARD_DELETE_FG = 'N' AND SYSDATE - BOARD_CREATE_DATE &lt; 30
		GROUP BY B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CREATE_DATE, USER_NICKNAME, B.READ_COUNT, CATEGORY_NAME
		ORDER BY B.READ_COUNT DESC) A
		WHERE ROWNUM &lt;= 25
	</entry>
	
	<!-- 인기 게시글 좋아요 순 정렬 -->
	<entry key="sortByLikeCount">
		SELECT ROWNUM, A.*
		FROM (SELECT B.BOARD_NO, B.BOARD_TITLE, TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS BOARD_CREATE_DATE, USER_NICKNAME ,B.READ_COUNT, COUNT(L.BOARD_NO) AS LIKE_COUNT, CATEGORY_NAME
		FROM BOARD B
		JOIN "USER" U ON B.USER_NO = U.USER_NO
		LEFT JOIN "LIKE" L ON B.BOARD_NO = L.BOARD_NO
		JOIN CATEGORY USING(CATEGORY_NO)
		WHERE BOARD_DELETE_FG = 'N' AND SYSDATE - BOARD_CREATE_DATE &lt; 30
		GROUP BY B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CREATE_DATE, USER_NICKNAME, B.READ_COUNT, CATEGORY_NAME
		ORDER BY LIKE_COUNT DESC) A
		WHERE ROWNUM &lt;= 25
	</entry>
	
	<!-- 게시글 상세 조회 -->
	<entry key="selectBoardDetail">
		SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD HH24:MI') AS BOARD_CREATE_DATE, USER_NICKNAME ,B.READ_COUNT, COUNT(L.BOARD_NO) AS LIKE_COUNT, CATEGORY_NAME
		FROM BOARD B
		JOIN "USER" U ON B.USER_NO = U.USER_NO
		LEFT JOIN "LIKE" L ON B.BOARD_NO = L.BOARD_NO
		JOIN CATEGORY USING(CATEGORY_NO)
		WHERE BOARD_DELETE_FG = 'N' AND B.BOARD_NO = ?
		GROUP BY B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, B.BOARD_CREATE_DATE, USER_NICKNAME, B.READ_COUNT, CATEGORY_NAME
	</entry>
	
  <!-- 카카오맵리스트  -->
	 <entry key="kakaoMapList">
	  SELECT BOARD_TITLE, BOARD_CONTENT ,BOARD_CREATE_DATE , LATITUDE ,LONGITUDE, CATEGORY_NAME, USER_NICKNAME, BOARD_NO
	  FROM BOARD
	  LEFT JOIN "USER" "LIKE"  USING(USER_NO)
	  LEFT JOIN "CATEGORY"  USING(CATEGORY_NO)

	</entry>
	
	<!-- 조회수 증가  -->
	<entry key="updateRead">
		UPDATE BOARD SET READ_COUNT = READ_COUNT +1
		WHERE BOARD_NO = ?	
	</entry>
	
	<!-- 좋아요 확인 -->
	<entry key="selectLike">
		SELECT COUNT(*)
		FROM "LIKE"
		WHERE USER_NO = ? AND BOARD_NO = ?
	</entry>
	
	<!-- 좋아요 추가 -->
	<entry key="updateLike">
		INSERT INTO "LIKE" VALUES (?, ?)
	</entry>
	
	<!-- 좋아요 삭제 -->
	<entry key="deleteLike">
		DELETE FROM "LIKE" WHERE USER_NO = ? AND BOARD_NO = ?
	</entry>
	
	<entry key="deleteBoard">
		UPDATE BOARD SET BOARD_DELETE_FG = 'Y'
		WHERE BOARD_NO = ?
	</entry>
	
	
	<entry key="kakaoMapBoardRecent">
		SELECT BOARD_TITLE, BOARD_CREATE_DATE, CATEGORY_NAME, USER_NICKNAME, BOARD_NO, IMG_RENAME
		FROM BOARD
		LEFT JOIN "USER" "LIKE"  USING(USER_NO)
		LEFT JOIN "BOARD_IMG" USING(BOARD_NO)
		LEFT JOIN "CATEGORY"   USING(CATEGORY_NO)
		ORDER BY BOARD_CREATE_DATE DESC
	</entry>
	

	<!-- 게시글 상세조회 내 댓글 조회 -->
	<entry key="selectAllComment">
		SELECT PROFILE_IMG, USER_NICKNAME, COMMENT_CONTENT, TO_CHAR(COMMENT_CREATE_DATE, 'YYYY-MM-DD HH24:MI') AS COMMENT_CREATE_DATE
		FROM "COMMENT"
		JOIN "USER" USING(USER_NO)
		WHERE BOARD_NO = ?
	</entry>

	
	<!-- 게시글 등록 -->
	<entry key="insertBoard">
		INSERT INTO "BOARD"(BOARD_TITLE, BOARD_CONTENT, BOARD_CREATE_DATE, READ_COUNT, LATITUDE, LONGITUDE, BOARD_DELETE_FG ,CATEGORY_NO, USER_NO ) 
       	VALUES( ? , ?, SYSDATE,  DEFAULT,  ? , ?, DEFAULT, ? , ?)
	
	</entry>
	
		<!-- 게시글 번호 얻어오기 -->
	<entry key="getBoardNo">
		SELECT BOARD_NO 
		FROM BOARD 
		WHERE BOARD_TITLE = ? 
		AND BOARD_CONTENT =? 
		AND CATEGORY_NO = ? 
		AND USER_NO = ? 
		AND BOARD_DELETE_FG = 'N' 
	</entry>
	
</properties>